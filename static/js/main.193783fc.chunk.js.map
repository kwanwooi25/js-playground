{"version":3,"sources":["helpers/parse-code.js","assets/kw-logo.svg","serviceWorker.js","index.js","containers/App.js"],"names":["__webpack_require__","d","__webpack_exports__","parseCode","lodash__WEBPACK_IMPORTED_MODULE_0__","lodash__WEBPACK_IMPORTED_MODULE_0___default","n","esprima","require","OPEN_BRACKETS","CLOSE_BRACKETS","BRACKETS_MAP",")","}","]","`","findBrackets","column","lineContents","_","intersection","takeRight","length","code","codeByLine","split","tokenized","tokenize","loc","brackets","(","{","[","wasOpen","parsed","reduce","expressions","_ref","value","lineNumber","end","line","lineHasMoreDelimiters","includes","every","count","take","join","eval","module","exports","p","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","react_default","a","createElement","App","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","onReset","_this","setState","renderResult","formatted","mapValues","expression","result","isFunction","name","react__WEBPACK_IMPORTED_MODULE_6___default","className","isBoolean","isObject","isArray","JSON","stringify","map","key","_this2","this","src","logo","alt","onClick","xmlns","width","height","viewBox","fill","react_codemirror2__WEBPACK_IMPORTED_MODULE_7__","options","mode","theme","lineNumbers","onBeforeChange","editor","data","onChange","e","toString","Component"],"mappings":"kIAAAA,oBAAAC,EAAAC,oBAAA,sBAAAC,YAAA,IAAAC,oCAAAJ,oBAAA,GAAAK,4CAAAL,oBAAAM,EAAAF,qCACMG,QAAUC,oBAAQ,IAClBC,cAAgB,CAAE,IAAK,IAAK,IAAK,KACjCC,eAAiB,CAAE,IAAK,IAAK,IAAK,KAClCC,aAAe,CACnBC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,KAGDC,aAAe,SAACC,EAAQC,GAAT,OACjBC,8CAAEC,aAAaD,8CAAEE,UAAUH,EAAcA,EAAaI,OAASL,GAASR,eAAea,QAE9EnB,UAAY,SAAZA,UAAYoB,MACvB,IAAMC,WAAaD,KAAKE,MAAM,MACxBC,UAAYnB,QAAQoB,SAASJ,KAAM,CAAEK,KAAK,IAC1CC,SAAW,CAAEC,IAAK,EAAGC,IAAK,EAAGC,IAAK,GACpCC,SAAU,EAERC,OAASf,8CAAEgB,OAAOT,UAAW,SAACU,EAADC,GAAiC,IAAjBC,EAAiBD,EAAjBC,MAAOV,EAAUS,EAAVT,IAClDW,EAAaX,EAAIY,IAAIC,KACrBvB,EAAeM,WAAWe,EAAa,GACvCG,EAAwB1B,aAAaY,EAAIY,IAAIvB,OAAQC,GAE3D,OAAIkB,EAAYG,GAAsBH,GAElC3B,cAAckC,SAASL,KACzBT,SAASS,IAAU,EACnBL,SAAU,GAGRvB,eAAeiC,SAASL,KAC1BT,SAASlB,aAAa2B,KAAW,IAG9BI,GAAyBT,SAAWd,8CAAEyB,MAAMf,SAAU,SAAAgB,GAAK,OAAc,IAAVA,KAClEZ,SAAU,EACVG,EAAYG,GAAcpB,8CAAE2B,KAAKtB,WAAYe,GAAYQ,KAAK,MAEvDX,IAGJM,GAAyBvB,8CAAEyB,MAAMf,SAAU,SAAAgB,GAAK,OAAc,IAAVA,KACvDT,EAAYG,GAAcpB,8CAAE2B,KAAKtB,WAAYe,GAAYQ,KAAK,MAEvDX,GAGFA,IACN,IAGH,OADAY,KAAKzB,MACEW,4BCrDTe,EAAAC,QAAiBlD,EAAAmD,EAAuB,qMCYlCC,SAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,4DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,YAI1BC,QAAQC,IACN,gHAKEb,GAAUA,EAAOc,UACnBd,EAAOc,SAAST,KAMlBO,QAAQC,IAAI,sCAGRb,GAAUA,EAAOe,WACnBf,EAAOe,UAAUV,SAO5BW,MAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,KCvFjEC,IAASC,OAAOC,EAAAC,EAAAC,cAACC,EAAA,EAAD,MAASC,SAASC,eAAe,SDgB1C,SAAkBzB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIyB,IAAIC,iBAAwBjC,OAAOC,UAC3CiC,SAAWlC,OAAOC,SAASiC,OAIvC,OAGFlC,OAAOmC,iBAAiB,OAAQ,WAC9B,IAAM9B,EAAK,GAAA+B,OAAMH,iBAAN,sBAEPnC,GA6DV,SAAiCO,EAAOC,GAEtC+B,MAAMhC,GACHK,KAAK,SAAA4B,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7CnC,UAAUC,cAAcmC,MAAMjC,KAAK,SAAAC,GACjCA,EAAaiC,aAAalC,KAAK,WAC7BV,OAAOC,SAAS4C,aAKpBzC,EAAgBC,EAAOC,KAG1BgB,MAAM,WACLJ,QAAQC,IACN,mEAjFA2B,CAAwBzC,EAAOC,GAI/BC,UAAUC,cAAcmC,MAAMjC,KAAK,WACjCQ,QAAQC,IACN,+GAMJf,EAAgBC,EAAOC,MCvC/BE,26ECAMqB,6pBACJb,MAAQ,CACN/C,KAAM,GACNW,OAAQ,KACR2C,MAAO,UAGTwB,QAAU,WACRC,MAAKC,SAAS,CACZhF,KAAM,GACNW,OAAQ,KACR2C,MAAO,YAIX2B,aAAe,SAAAtE,QACb,IAAMuE,UAAYtF,8CAAEuF,UAAUxE,OAAQ,SAAAyE,YACpC,IAAMC,OAAS5D,KAAK2D,YAEpB,OAAIxF,8CAAE0F,WAAWD,SAAWA,OAAOE,KAC1BC,2CAAA9B,EAAAC,cAAA,OAAK8B,UAAU,uBAAuB,aAAeJ,OAAOE,MAC1D3F,8CAAE8F,UAAUL,QACdG,2CAAA9B,EAAAC,cAAA,OAAK8B,UAAU,sBAAsBJ,OAAS,OAAS,SACrDzF,8CAAE+F,SAASN,SAAWzF,8CAAEgG,QAAQP,QAClCG,2CAAA9B,EAAAC,cAAA,OAAK8B,UAAU,qBAAqBI,KAAKC,UAAUT,SAGrDA,QAAUG,2CAAA9B,EAAAC,cAAA,OAAK8B,UAAS,cAAAtB,cAAuBkB,SAAWA,UAGnE,OAAOzF,8CAAEmG,IAAIb,UAAW,SAACE,EAAYlE,GACnC,GAAIkE,EACF,OACEI,2CAAA9B,EAAAC,cAAA,OAAKqC,IAAK9E,EAAMuE,UAAU,UACvBL,EACDI,2CAAA9B,EAAAC,cAAA,OAAK8B,UAAU,eAAf,QAAmCvE,6TAOpC,IAAA+E,EAAAC,KACP,OACEV,2CAAA9B,EAAAC,cAAA,OAAK8B,UAAU,aACbD,2CAAA9B,EAAAC,cAAA,UAAQ8B,UAAU,UAChBD,2CAAA9B,EAAAC,cAAA,gCACA6B,2CAAA9B,EAAAC,cAAA,OAAKwC,IAAKC,4DAAMC,IAAI,mBAEtBb,2CAAA9B,EAAAC,cAAA,OAAK8B,UAAU,kBACbD,2CAAA9B,EAAAC,cAAA,OAAK8B,UAAU,WACbD,2CAAA9B,EAAAC,cAAA,UAAQ2C,QAASJ,KAAKpB,SACpBU,2CAAA9B,EAAAC,cAAA,OAAK4C,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,aACrElB,2CAAA9B,EAAAC,cAAA,QAAM8B,UAAU,QAAQkB,KAAK,QAAQjI,EAAE,6GAI7C8G,2CAAA9B,EAAAC,cAACiD,+CAAA,WAAD,CACE7F,MAAOmF,KAAKnD,MAAM/C,KAClB6G,QAAS,CACPC,KAAM,aACNC,MAAO,WACPC,aAAa,GAEfC,eAAgB,SAACC,EAAQC,EAAMpG,GAC7BkF,EAAKjB,SAAS,CAAEhF,KAAMe,KAExBqG,SAAU,SAACF,EAAQC,EAAMpG,GACvB,IAAIJ,EAAQ2C,EAEZ,IACE3C,EAAS/B,4DAAUmC,GACnB,MAAOsG,GACP/D,EAAQ+D,EAAEC,WAGZrB,EAAKjB,SAAS,CAAErE,SAAQ2C,cAK7B4C,KAAKnD,MAAMpC,QACV6E,2CAAA9B,EAAAC,cAAA,OAAK8B,UAAU,WACbD,2CAAA9B,EAAAC,cAAA,oBACCuC,KAAKnD,MAAMpC,QAAUuF,KAAKjB,aAAaiB,KAAKnD,MAAMpC,SAItDuF,KAAKnD,MAAMO,OACVkC,2CAAA9B,EAAAC,cAAA,OAAK8B,UAAU,SACbD,2CAAA9B,EAAAC,cAAA,mBACCuC,KAAKnD,MAAMO,iBA3FNiE,8CAmGH3D","file":"static/js/main.193783fc.chunk.js","sourcesContent":["import _ from 'lodash';\nconst esprima = require('esprima');\nconst OPEN_BRACKETS = [ '(', '{', '[', '`' ];\nconst CLOSE_BRACKETS = [ ')', '}', ']', '`' ];\nconst BRACKETS_MAP = {\n  ')': '(',\n  '}': '{',\n  ']': '[',\n  '`': '`'\n};\n\nconst findBrackets = (column, lineContents) => \n    _.intersection(_.takeRight(lineContents, lineContents.length - column), OPEN_BRACKETS).length\n\nexport const parseCode = code => {\n  const codeByLine = code.split('\\n');\n  const tokenized = esprima.tokenize(code, { loc: true });\n  const brackets = { '(': 0, '{': 0, '[': 0 };\n  let wasOpen = false;\n\n  const parsed = _.reduce(tokenized, (expressions, { value, loc }) => {\n    const lineNumber = loc.end.line;\n    const lineContents = codeByLine[lineNumber - 1];\n    const lineHasMoreDelimiters = findBrackets(loc.end.column, lineContents);\n\n    if (expressions[lineNumber]) { return expressions; }\n\n    if (OPEN_BRACKETS.includes(value)) {\n      brackets[value] += 1;\n      wasOpen = true;\n    }\n\n    if (CLOSE_BRACKETS.includes(value)) {\n      brackets[BRACKETS_MAP[value]] -= 1;\n    }\n\n    if (!lineHasMoreDelimiters && wasOpen && _.every(brackets, count => count === 0)) {\n      wasOpen = false;\n      expressions[lineNumber] = _.take(codeByLine, lineNumber).join('\\n');\n\n      return expressions;\n    }\n\n    if (!lineHasMoreDelimiters && _.every(brackets, count => count === 0)) {\n      expressions[lineNumber] = _.take(codeByLine, lineNumber).join('\\n');\n\n      return expressions;\n    }\n\n    return expressions;\n  }, {});\n\n  eval(code);\n  return parsed;\n}","module.exports = __webpack_public_path__ + \"static/media/kw-logo.303d460b.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { Controlled as CodeMirror } from 'react-codemirror2';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/material.css';\nimport 'codemirror/mode/javascript/javascript';\nimport { parseCode } from '../helpers/parse-code';\n\nimport logo from '../assets/kw-logo.svg';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    code: '',\n    parsed: null,\n    error: ''\n  }\n\n  onReset = () => {\n    this.setState({\n      code: '',\n      parsed: null,\n      error: ''\n    })\n  }\n\n  renderResult = parsed => {\n    const formatted = _.mapValues(parsed, expression => {\n      const result = eval(expression);\n\n      if (_.isFunction(result) && result.name) {\n        return <div className=\"expression function\">{'FUNCTION: ' + result.name}</div>;\n      } else if (_.isBoolean(result)) {\n        return <div className=\"expression boolean\">{result ? 'TRUE' : 'FALSE'}</div>;\n      } else if (_.isObject(result) || _.isArray(result)) {\n        return <div className=\"expression object\">{JSON.stringify(result)}</div>;\n      }\n\n      return result && <div className={`expression ${typeof result}`}>{result}</div>;\n    });\n\n    return _.map(formatted, (expression, line) => {\n      if (expression) {\n        return (\n          <div key={line} className=\"result\">\n            {expression}\n            <div className=\"line-number\">Line {line}</div>\n          </div>\n        )\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"header\">\n          <span>JS Playground by</span>\n          <img src={logo} alt=\"Kwanwoo Jeong\"/>\n        </header>\n        <div className=\"code-container\">\n          <div className=\"buttons\">\n            <button onClick={this.onReset}>\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                <path className=\"clear\" fill=\"white\" d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/>\n              </svg>\n            </button>\n          </div>\n          <CodeMirror\n            value={this.state.code}\n            options={{\n              mode: 'javascript',\n              theme: 'material',\n              lineNumbers: true\n            }}\n            onBeforeChange={(editor, data, value) => {\n              this.setState({ code: value });\n            }}\n            onChange={(editor, data, value) => {\n              let parsed, error;\n\n              try {\n                parsed = parseCode(value);\n              } catch (e) {\n                error = e.toString();\n              }\n\n              this.setState({ parsed, error });\n            }}\n          />\n        </div>\n\n        {this.state.parsed && (\n          <div className=\"results\">\n            <h2>Result</h2>\n            {this.state.parsed && this.renderResult(this.state.parsed)}\n          </div>\n        )}\n\n        {this.state.error && (\n          <div className=\"error\">\n            <h2>Error</h2>\n            {this.state.error}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"sourceRoot":""}